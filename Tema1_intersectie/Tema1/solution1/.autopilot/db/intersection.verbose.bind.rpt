

================================================================
== Vitis HLS Report for 'intersection'
================================================================
* Date:           Fri Jan 28 20:21:56 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:33 MDT 2021)
* Project:        Tema1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.588 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.58>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 3 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %Stg"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %Stg, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %D"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %D, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %S"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %S, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %J"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %J, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %Regula"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %Regula, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %EW"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %EW, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %NS"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %NS, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%J_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %J" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 19 'read' 'J_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%S_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %S" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 20 'read' 'S_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%D_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %D" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 21 'read' 'D_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%Stg_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %Stg" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 22 'read' 'Stg_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.97ns)   --->   "%or_ln26 = or i1 %Stg_read, i1 %D_read" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 23 'or' 'or_ln26' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node or_ln34_1)   --->   "%or_ln34 = or i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 24 'or' 'or_ln34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln34_1 = or i1 %or_ln34, i1 %or_ln26" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 25 'or' 'or_ln34_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %or_ln34_1, void %.critedge, void %_Z5rule5bbbbPi.exit" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 26 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln35 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 5" [Tema1/intersection_semaphores.cpp:35]   --->   Operation 27 'write' 'write_ln35' <Predicate = (!or_ln34_1)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.61ns)   --->   "%br_ln0 = br void %_Z5rule1bbPi.exit"   --->   Operation 28 'br' 'br_ln0' <Predicate = (!or_ln34_1)> <Delay = 1.61>
ST_1 : Operation 29 [1/1] (0.97ns)   --->   "%xor_ln10 = xor i1 %Stg_read, i1 1" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 29 'xor' 'xor_ln10' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.97ns)   --->   "%and_ln10 = and i1 %D_read, i1 %xor_ln10" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 30 'and' 'and_ln10' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.97ns)   --->   "%and_ln10_1 = and i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 31 'and' 'and_ln10_1' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %and_ln10, void, void" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 32 'br' 'br_ln10' <Predicate = (or_ln34_1)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node or_ln10_1)   --->   "%or_ln10 = or i1 %and_ln10_1, i1 %xor_ln10" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 33 'or' 'or_ln10' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln10_1 = or i1 %or_ln10, i1 %D_read" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 34 'or' 'or_ln10_1' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %or_ln10_1, void %_Z5rule2bbbbPi.exit, void %.critedge29" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 35 'br' 'br_ln10' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %and_ln10_1, void %_Z5rule2bbbbPi.exit, void %.critedge29" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 36 'br' 'br_ln10' <Predicate = (or_ln34_1 & and_ln10)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 2" [Tema1/intersection_semaphores.cpp:11]   --->   Operation 37 'write' 'write_ln11' <Predicate = (or_ln34_1 & and_ln10 & !and_ln10_1) | (or_ln34_1 & !and_ln10 & !or_ln10_1)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.61ns)   --->   "%br_ln51 = br void %_Z5rule1bbPi.exit" [Tema1/intersection_semaphores.cpp:51]   --->   Operation 38 'br' 'br_ln51' <Predicate = (or_ln34_1 & and_ln10 & !and_ln10_1) | (or_ln34_1 & !and_ln10 & !or_ln10_1)> <Delay = 1.61>
ST_1 : Operation 39 [1/1] (0.97ns)   --->   "%and_ln2 = and i1 %D_read, i1 %Stg_read" [Tema1/intersection_semaphores.cpp:2]   --->   Operation 39 'and' 'and_ln2' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1) | (or_ln34_1 & !and_ln10 & or_ln10_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.61ns)   --->   "%br_ln2 = br i1 %and_ln2, void %_Z5rule1bbPi.exit, void" [Tema1/intersection_semaphores.cpp:2]   --->   Operation 40 'br' 'br_ln2' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1) | (or_ln34_1 & !and_ln10 & or_ln10_1)> <Delay = 1.61>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%write_ln3 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 1" [Tema1/intersection_semaphores.cpp:3]   --->   Operation 41 'write' 'write_ln3' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1 & and_ln2) | (or_ln34_1 & !and_ln10 & or_ln10_1 & and_ln2)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.61ns)   --->   "%br_ln4 = br void %_Z5rule1bbPi.exit" [Tema1/intersection_semaphores.cpp:4]   --->   Operation 42 'br' 'br_ln4' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1 & and_ln2) | (or_ln34_1 & !and_ln10 & or_ln10_1 & and_ln2)> <Delay = 1.61>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%and_ln18 = and i1 %Stg_read, i1 %D_read" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 43 'and' 'and_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%and_ln18_1 = and i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 44 'and' 'and_ln18_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%xor_ln18 = xor i1 %and_ln18_1, i1 1" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 45 'xor' 'xor_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln18 = or i1 %and_ln18, i1 %xor_ln18" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 46 'or' 'or_ln18' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.58>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty = phi i1 1, void %_Z5rule2bbbbPi.exit, i1 1, void %.critedge, i1 1, void, i1 0, void %.critedge29"   --->   Operation 47 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%write_ln51 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %EW, i1 %empty" [Tema1/intersection_semaphores.cpp:51]   --->   Operation 48 'write' 'write_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln18 = br i1 %or_ln18, void %.critedge30, void %_Z5rule3bbbbPi.exit" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 49 'br' 'br_ln18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln19 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 3" [Tema1/intersection_semaphores.cpp:19]   --->   Operation 50 'write' 'write_ln19' <Predicate = (!or_ln18)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.61ns)   --->   "%br_ln0 = br void %_Z5rule4bbbbPi.exit"   --->   Operation 51 'br' 'br_ln0' <Predicate = (!or_ln18)> <Delay = 1.61>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln26)   --->   "%xor_ln26 = xor i1 %or_ln26, i1 1" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 52 'xor' 'xor_ln26' <Predicate = (or_ln18)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node and_ln26)   --->   "%xor_ln26_1 = xor i1 %J_read, i1 %S_read" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 53 'xor' 'xor_ln26_1' <Predicate = (or_ln18)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln26 = and i1 %xor_ln26_1, i1 %xor_ln26" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 54 'and' 'and_ln26' <Predicate = (or_ln18)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.61ns)   --->   "%br_ln26 = br i1 %and_ln26, void %_Z5rule4bbbbPi.exit, void" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 55 'br' 'br_ln26' <Predicate = (or_ln18)> <Delay = 1.61>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%write_ln27 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 4" [Tema1/intersection_semaphores.cpp:27]   --->   Operation 56 'write' 'write_ln27' <Predicate = (or_ln18 & and_ln26)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.61ns)   --->   "%br_ln28 = br void %_Z5rule4bbbbPi.exit" [Tema1/intersection_semaphores.cpp:28]   --->   Operation 57 'br' 'br_ln28' <Predicate = (or_ln18 & and_ln26)> <Delay = 1.61>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%empty_5 = phi i1 1, void %.critedge30, i1 1, void, i1 0, void %_Z5rule3bbbbPi.exit"   --->   Operation 58 'phi' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%write_ln52 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %NS, i1 %empty_5" [Tema1/intersection_semaphores.cpp:52]   --->   Operation 59 'write' 'write_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%ret_ln53 = ret" [Tema1/intersection_semaphores.cpp:53]   --->   Operation 60 'ret' 'ret_ln53' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_none:ce=0
Port [ Stg]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ D]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ S]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ J]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ Regula]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ EW]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ NS]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=1; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
spectopmodule_ln0 (spectopmodule) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
specbitsmap_ln0   (specbitsmap  ) [ 000]
specinterface_ln0 (specinterface) [ 000]
J_read            (read         ) [ 001]
S_read            (read         ) [ 001]
D_read            (read         ) [ 000]
Stg_read          (read         ) [ 000]
or_ln26           (or           ) [ 001]
or_ln34           (or           ) [ 000]
or_ln34_1         (or           ) [ 010]
br_ln34           (br           ) [ 000]
write_ln35        (write        ) [ 000]
br_ln0            (br           ) [ 011]
xor_ln10          (xor          ) [ 000]
and_ln10          (and          ) [ 010]
and_ln10_1        (and          ) [ 010]
br_ln10           (br           ) [ 000]
or_ln10           (or           ) [ 000]
or_ln10_1         (or           ) [ 010]
br_ln10           (br           ) [ 000]
br_ln10           (br           ) [ 000]
write_ln11        (write        ) [ 000]
br_ln51           (br           ) [ 011]
and_ln2           (and          ) [ 010]
br_ln2            (br           ) [ 011]
write_ln3         (write        ) [ 000]
br_ln4            (br           ) [ 011]
and_ln18          (and          ) [ 000]
and_ln18_1        (and          ) [ 000]
xor_ln18          (xor          ) [ 000]
or_ln18           (or           ) [ 001]
empty             (phi          ) [ 001]
write_ln51        (write        ) [ 000]
br_ln18           (br           ) [ 000]
write_ln19        (write        ) [ 000]
br_ln0            (br           ) [ 000]
xor_ln26          (xor          ) [ 000]
xor_ln26_1        (xor          ) [ 000]
and_ln26          (and          ) [ 001]
br_ln26           (br           ) [ 000]
write_ln27        (write        ) [ 000]
br_ln28           (br           ) [ 000]
empty_5           (phi          ) [ 000]
write_ln52        (write        ) [ 000]
ret_ln53          (ret          ) [ 000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="Stg">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="Stg"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="D">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="D"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="S">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="S"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="J">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="J"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="Regula">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="Regula"/></StgValue>
</bind>
</comp>

<comp id="10" class="1000" name="EW">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="EW"/></StgValue>
</bind>
</comp>

<comp id="12" class="1000" name="NS">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="NS"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_1"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_2"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty_0"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="empty"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_none.i1"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.i32P0A"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.ap_none.i1P0A"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="50" class="1004" name="J_read_read_fu_50">
<pin_list>
<pin id="51" dir="0" index="0" bw="1" slack="0"/>
<pin id="52" dir="0" index="1" bw="1" slack="0"/>
<pin id="53" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="J_read/1 "/>
</bind>
</comp>

<comp id="56" class="1004" name="S_read_read_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="1" slack="0"/>
<pin id="58" dir="0" index="1" bw="1" slack="0"/>
<pin id="59" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="S_read/1 "/>
</bind>
</comp>

<comp id="62" class="1004" name="D_read_read_fu_62">
<pin_list>
<pin id="63" dir="0" index="0" bw="1" slack="0"/>
<pin id="64" dir="0" index="1" bw="1" slack="0"/>
<pin id="65" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="D_read/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="Stg_read_read_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="1" slack="0"/>
<pin id="70" dir="0" index="1" bw="1" slack="0"/>
<pin id="71" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="Stg_read/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="grp_write_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="0" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="0"/>
<pin id="77" dir="0" index="2" bw="4" slack="0"/>
<pin id="78" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln35/1 write_ln11/1 write_ln3/1 write_ln19/2 write_ln27/2 "/>
</bind>
</comp>

<comp id="84" class="1004" name="write_ln51_write_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="0" slack="0"/>
<pin id="86" dir="0" index="1" bw="1" slack="0"/>
<pin id="87" dir="0" index="2" bw="1" slack="0"/>
<pin id="88" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln51/2 "/>
</bind>
</comp>

<comp id="93" class="1004" name="write_ln52_write_fu_93">
<pin_list>
<pin id="94" dir="0" index="0" bw="0" slack="0"/>
<pin id="95" dir="0" index="1" bw="1" slack="0"/>
<pin id="96" dir="0" index="2" bw="1" slack="0"/>
<pin id="97" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="write_ln52/2 "/>
</bind>
</comp>

<comp id="100" class="1005" name="empty_reg_100">
<pin_list>
<pin id="101" dir="0" index="0" bw="1" slack="1"/>
<pin id="102" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="empty (phireg) "/>
</bind>
</comp>

<comp id="105" class="1004" name="empty_phi_fu_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="1" slack="1"/>
<pin id="107" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="108" dir="0" index="2" bw="1" slack="1"/>
<pin id="109" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="110" dir="0" index="4" bw="1" slack="1"/>
<pin id="111" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="112" dir="0" index="6" bw="1" slack="1"/>
<pin id="113" dir="0" index="7" bw="0" slack="2147483647"/>
<pin id="114" dir="1" index="8" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="empty/2 "/>
</bind>
</comp>

<comp id="120" class="1005" name="empty_5_reg_120">
<pin_list>
<pin id="121" dir="0" index="0" bw="1" slack="2147483647"/>
<pin id="122" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="empty_5 (phireg) "/>
</bind>
</comp>

<comp id="123" class="1004" name="empty_5_phi_fu_123">
<pin_list>
<pin id="124" dir="0" index="0" bw="1" slack="0"/>
<pin id="125" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="126" dir="0" index="2" bw="1" slack="0"/>
<pin id="127" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="128" dir="0" index="4" bw="1" slack="0"/>
<pin id="129" dir="0" index="5" bw="0" slack="2147483647"/>
<pin id="130" dir="1" index="6" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="empty_5/2 "/>
</bind>
</comp>

<comp id="135" class="1004" name="or_ln26_fu_135">
<pin_list>
<pin id="136" dir="0" index="0" bw="1" slack="0"/>
<pin id="137" dir="0" index="1" bw="1" slack="0"/>
<pin id="138" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln26/1 "/>
</bind>
</comp>

<comp id="141" class="1004" name="or_ln34_fu_141">
<pin_list>
<pin id="142" dir="0" index="0" bw="1" slack="0"/>
<pin id="143" dir="0" index="1" bw="1" slack="0"/>
<pin id="144" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln34/1 "/>
</bind>
</comp>

<comp id="147" class="1004" name="or_ln34_1_fu_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="1" slack="0"/>
<pin id="149" dir="0" index="1" bw="1" slack="0"/>
<pin id="150" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln34_1/1 "/>
</bind>
</comp>

<comp id="153" class="1004" name="xor_ln10_fu_153">
<pin_list>
<pin id="154" dir="0" index="0" bw="1" slack="0"/>
<pin id="155" dir="0" index="1" bw="1" slack="0"/>
<pin id="156" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln10/1 "/>
</bind>
</comp>

<comp id="159" class="1004" name="and_ln10_fu_159">
<pin_list>
<pin id="160" dir="0" index="0" bw="1" slack="0"/>
<pin id="161" dir="0" index="1" bw="1" slack="0"/>
<pin id="162" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10/1 "/>
</bind>
</comp>

<comp id="165" class="1004" name="and_ln10_1_fu_165">
<pin_list>
<pin id="166" dir="0" index="0" bw="1" slack="0"/>
<pin id="167" dir="0" index="1" bw="1" slack="0"/>
<pin id="168" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln10_1/1 "/>
</bind>
</comp>

<comp id="171" class="1004" name="or_ln10_fu_171">
<pin_list>
<pin id="172" dir="0" index="0" bw="1" slack="0"/>
<pin id="173" dir="0" index="1" bw="1" slack="0"/>
<pin id="174" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln10/1 "/>
</bind>
</comp>

<comp id="177" class="1004" name="or_ln10_1_fu_177">
<pin_list>
<pin id="178" dir="0" index="0" bw="1" slack="0"/>
<pin id="179" dir="0" index="1" bw="1" slack="0"/>
<pin id="180" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln10_1/1 "/>
</bind>
</comp>

<comp id="183" class="1004" name="and_ln2_fu_183">
<pin_list>
<pin id="184" dir="0" index="0" bw="1" slack="0"/>
<pin id="185" dir="0" index="1" bw="1" slack="0"/>
<pin id="186" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln2/1 "/>
</bind>
</comp>

<comp id="189" class="1004" name="and_ln18_fu_189">
<pin_list>
<pin id="190" dir="0" index="0" bw="1" slack="0"/>
<pin id="191" dir="0" index="1" bw="1" slack="0"/>
<pin id="192" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln18/1 "/>
</bind>
</comp>

<comp id="195" class="1004" name="and_ln18_1_fu_195">
<pin_list>
<pin id="196" dir="0" index="0" bw="1" slack="0"/>
<pin id="197" dir="0" index="1" bw="1" slack="0"/>
<pin id="198" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln18_1/1 "/>
</bind>
</comp>

<comp id="201" class="1004" name="xor_ln18_fu_201">
<pin_list>
<pin id="202" dir="0" index="0" bw="1" slack="0"/>
<pin id="203" dir="0" index="1" bw="1" slack="0"/>
<pin id="204" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln18/1 "/>
</bind>
</comp>

<comp id="207" class="1004" name="or_ln18_fu_207">
<pin_list>
<pin id="208" dir="0" index="0" bw="1" slack="0"/>
<pin id="209" dir="0" index="1" bw="1" slack="0"/>
<pin id="210" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln18/1 "/>
</bind>
</comp>

<comp id="213" class="1004" name="xor_ln26_fu_213">
<pin_list>
<pin id="214" dir="0" index="0" bw="1" slack="1"/>
<pin id="215" dir="0" index="1" bw="1" slack="0"/>
<pin id="216" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln26/2 "/>
</bind>
</comp>

<comp id="218" class="1004" name="xor_ln26_1_fu_218">
<pin_list>
<pin id="219" dir="0" index="0" bw="1" slack="1"/>
<pin id="220" dir="0" index="1" bw="1" slack="1"/>
<pin id="221" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln26_1/2 "/>
</bind>
</comp>

<comp id="222" class="1004" name="and_ln26_fu_222">
<pin_list>
<pin id="223" dir="0" index="0" bw="1" slack="0"/>
<pin id="224" dir="0" index="1" bw="1" slack="0"/>
<pin id="225" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln26/2 "/>
</bind>
</comp>

<comp id="228" class="1005" name="J_read_reg_228">
<pin_list>
<pin id="229" dir="0" index="0" bw="1" slack="1"/>
<pin id="230" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="J_read "/>
</bind>
</comp>

<comp id="233" class="1005" name="S_read_reg_233">
<pin_list>
<pin id="234" dir="0" index="0" bw="1" slack="1"/>
<pin id="235" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="S_read "/>
</bind>
</comp>

<comp id="238" class="1005" name="or_ln26_reg_238">
<pin_list>
<pin id="239" dir="0" index="0" bw="1" slack="1"/>
<pin id="240" dir="1" index="1" bw="1" slack="1"/>
</pin_list>
<bind>
<opset="or_ln26 "/>
</bind>
</comp>

<comp id="258" class="1005" name="or_ln18_reg_258">
<pin_list>
<pin id="259" dir="0" index="0" bw="1" slack="1"/>
<pin id="260" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="or_ln18 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="54"><net_src comp="30" pin="0"/><net_sink comp="50" pin=0"/></net>

<net id="55"><net_src comp="6" pin="0"/><net_sink comp="50" pin=1"/></net>

<net id="60"><net_src comp="30" pin="0"/><net_sink comp="56" pin=0"/></net>

<net id="61"><net_src comp="4" pin="0"/><net_sink comp="56" pin=1"/></net>

<net id="66"><net_src comp="30" pin="0"/><net_sink comp="62" pin=0"/></net>

<net id="67"><net_src comp="2" pin="0"/><net_sink comp="62" pin=1"/></net>

<net id="72"><net_src comp="30" pin="0"/><net_sink comp="68" pin=0"/></net>

<net id="73"><net_src comp="0" pin="0"/><net_sink comp="68" pin=1"/></net>

<net id="79"><net_src comp="32" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="8" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="81"><net_src comp="34" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="82"><net_src comp="38" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="83"><net_src comp="40" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="89"><net_src comp="44" pin="0"/><net_sink comp="84" pin=0"/></net>

<net id="90"><net_src comp="10" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="91"><net_src comp="46" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="92"><net_src comp="48" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="98"><net_src comp="44" pin="0"/><net_sink comp="93" pin=0"/></net>

<net id="99"><net_src comp="12" pin="0"/><net_sink comp="93" pin=1"/></net>

<net id="103"><net_src comp="36" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="104"><net_src comp="42" pin="0"/><net_sink comp="100" pin=0"/></net>

<net id="115"><net_src comp="100" pin="1"/><net_sink comp="105" pin=0"/></net>

<net id="116"><net_src comp="100" pin="1"/><net_sink comp="105" pin=2"/></net>

<net id="117"><net_src comp="100" pin="1"/><net_sink comp="105" pin=4"/></net>

<net id="118"><net_src comp="100" pin="1"/><net_sink comp="105" pin=6"/></net>

<net id="119"><net_src comp="105" pin="8"/><net_sink comp="84" pin=2"/></net>

<net id="131"><net_src comp="36" pin="0"/><net_sink comp="123" pin=0"/></net>

<net id="132"><net_src comp="36" pin="0"/><net_sink comp="123" pin=2"/></net>

<net id="133"><net_src comp="42" pin="0"/><net_sink comp="123" pin=4"/></net>

<net id="134"><net_src comp="123" pin="6"/><net_sink comp="93" pin=2"/></net>

<net id="139"><net_src comp="68" pin="2"/><net_sink comp="135" pin=0"/></net>

<net id="140"><net_src comp="62" pin="2"/><net_sink comp="135" pin=1"/></net>

<net id="145"><net_src comp="56" pin="2"/><net_sink comp="141" pin=0"/></net>

<net id="146"><net_src comp="50" pin="2"/><net_sink comp="141" pin=1"/></net>

<net id="151"><net_src comp="141" pin="2"/><net_sink comp="147" pin=0"/></net>

<net id="152"><net_src comp="135" pin="2"/><net_sink comp="147" pin=1"/></net>

<net id="157"><net_src comp="68" pin="2"/><net_sink comp="153" pin=0"/></net>

<net id="158"><net_src comp="36" pin="0"/><net_sink comp="153" pin=1"/></net>

<net id="163"><net_src comp="62" pin="2"/><net_sink comp="159" pin=0"/></net>

<net id="164"><net_src comp="153" pin="2"/><net_sink comp="159" pin=1"/></net>

<net id="169"><net_src comp="56" pin="2"/><net_sink comp="165" pin=0"/></net>

<net id="170"><net_src comp="50" pin="2"/><net_sink comp="165" pin=1"/></net>

<net id="175"><net_src comp="165" pin="2"/><net_sink comp="171" pin=0"/></net>

<net id="176"><net_src comp="153" pin="2"/><net_sink comp="171" pin=1"/></net>

<net id="181"><net_src comp="171" pin="2"/><net_sink comp="177" pin=0"/></net>

<net id="182"><net_src comp="62" pin="2"/><net_sink comp="177" pin=1"/></net>

<net id="187"><net_src comp="62" pin="2"/><net_sink comp="183" pin=0"/></net>

<net id="188"><net_src comp="68" pin="2"/><net_sink comp="183" pin=1"/></net>

<net id="193"><net_src comp="68" pin="2"/><net_sink comp="189" pin=0"/></net>

<net id="194"><net_src comp="62" pin="2"/><net_sink comp="189" pin=1"/></net>

<net id="199"><net_src comp="56" pin="2"/><net_sink comp="195" pin=0"/></net>

<net id="200"><net_src comp="50" pin="2"/><net_sink comp="195" pin=1"/></net>

<net id="205"><net_src comp="195" pin="2"/><net_sink comp="201" pin=0"/></net>

<net id="206"><net_src comp="36" pin="0"/><net_sink comp="201" pin=1"/></net>

<net id="211"><net_src comp="189" pin="2"/><net_sink comp="207" pin=0"/></net>

<net id="212"><net_src comp="201" pin="2"/><net_sink comp="207" pin=1"/></net>

<net id="217"><net_src comp="36" pin="0"/><net_sink comp="213" pin=1"/></net>

<net id="226"><net_src comp="218" pin="2"/><net_sink comp="222" pin=0"/></net>

<net id="227"><net_src comp="213" pin="2"/><net_sink comp="222" pin=1"/></net>

<net id="231"><net_src comp="50" pin="2"/><net_sink comp="228" pin=0"/></net>

<net id="232"><net_src comp="228" pin="1"/><net_sink comp="218" pin=0"/></net>

<net id="236"><net_src comp="56" pin="2"/><net_sink comp="233" pin=0"/></net>

<net id="237"><net_src comp="233" pin="1"/><net_sink comp="218" pin=1"/></net>

<net id="241"><net_src comp="135" pin="2"/><net_sink comp="238" pin=0"/></net>

<net id="242"><net_src comp="238" pin="1"/><net_sink comp="213" pin=0"/></net>

<net id="261"><net_src comp="207" pin="2"/><net_sink comp="258" pin=0"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: Regula | {1 2 }
	Port: EW | {2 }
	Port: NS | {2 }
 - Input state : 
	Port: intersection : Stg | {1 }
	Port: intersection : D | {1 }
	Port: intersection : S | {1 }
	Port: intersection : J | {1 }
  - Chain level:
	State 1
	State 2
		write_ln51 : 1
		empty_5 : 1
		write_ln52 : 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|------------------------|---------|---------|
| Operation|     Functional Unit    |    FF   |   LUT   |
|----------|------------------------|---------|---------|
|          |     or_ln26_fu_135     |    0    |    2    |
|          |     or_ln34_fu_141     |    0    |    2    |
|    or    |    or_ln34_1_fu_147    |    0    |    2    |
|          |     or_ln10_fu_171     |    0    |    2    |
|          |    or_ln10_1_fu_177    |    0    |    2    |
|          |     or_ln18_fu_207     |    0    |    2    |
|----------|------------------------|---------|---------|
|          |     and_ln10_fu_159    |    0    |    2    |
|          |    and_ln10_1_fu_165   |    0    |    2    |
|    and   |     and_ln2_fu_183     |    0    |    2    |
|          |     and_ln18_fu_189    |    0    |    2    |
|          |    and_ln18_1_fu_195   |    0    |    2    |
|          |     and_ln26_fu_222    |    0    |    2    |
|----------|------------------------|---------|---------|
|          |     xor_ln10_fu_153    |    0    |    2    |
|    xor   |     xor_ln18_fu_201    |    0    |    2    |
|          |     xor_ln26_fu_213    |    0    |    2    |
|          |    xor_ln26_1_fu_218   |    0    |    2    |
|----------|------------------------|---------|---------|
|          |    J_read_read_fu_50   |    0    |    0    |
|   read   |    S_read_read_fu_56   |    0    |    0    |
|          |    D_read_read_fu_62   |    0    |    0    |
|          |   Stg_read_read_fu_68  |    0    |    0    |
|----------|------------------------|---------|---------|
|          |     grp_write_fu_74    |    0    |    0    |
|   write  | write_ln51_write_fu_84 |    0    |    0    |
|          | write_ln52_write_fu_93 |    0    |    0    |
|----------|------------------------|---------|---------|
|   Total  |                        |    0    |    32   |
|----------|------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------+--------+
|               |   FF   |
+---------------+--------+
| J_read_reg_228|    1   |
| S_read_reg_233|    1   |
|empty_5_reg_120|    1   |
| empty_reg_100 |    1   |
|or_ln18_reg_258|    1   |
|or_ln26_reg_238|    1   |
+---------------+--------+
|     Total     |    6   |
+---------------+--------+

* Multiplexer (MUX) list: 
|-----------------|------|------|------|--------||---------||---------|
|       Comp      |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------|------|------|------|--------||---------||---------|
| grp_write_fu_74 |  p2  |   5  |   4  |   20   ||    9    |
|  empty_reg_100  |  p0  |   2  |   1  |    2   |
|-----------------|------|------|------|--------||---------||---------|
|      Total      |      |      |      |   22   || 3.31729 ||    9    |
|-----------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   32   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    3   |    -   |    9   |
|  Register |    -   |    6   |    -   |
+-----------+--------+--------+--------+
|   Total   |    3   |    6   |   41   |
+-----------+--------+--------+--------+



================================================================
== Vitis HLS Report for 'intersection'
================================================================
* Date:           Fri Jan 28 20:21:55 2022

* Version:        2021.1 (Build 3247384 on Thu Jun 10 19:36:33 MDT 2021)
* Project:        Tema1
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.588 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+-----+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max    | min | max |   Type  |
    +---------+---------+-----------+-----------+-----+-----+---------+
    |        1|        1|  10.000 ns|  10.000 ns|    2|    2|       no|
    +---------+---------+-----------+-----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.58>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1"   --->   Operation 3 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 4 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %Stg"   --->   Operation 5 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %Stg, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 6 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %D"   --->   Operation 7 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %D, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 8 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %S"   --->   Operation 9 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %S, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %J"   --->   Operation 11 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %J, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %Regula"   --->   Operation 13 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %Regula, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %EW"   --->   Operation 15 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %EW, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i1 %NS"   --->   Operation 17 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %NS, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 18 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%J_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %J" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 19 'read' 'J_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%S_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %S" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 20 'read' 'S_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%D_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %D" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 21 'read' 'D_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%Stg_read = read i1 @_ssdm_op_Read.ap_none.i1, i1 %Stg" [Tema1/intersection_semaphores.cpp:41]   --->   Operation 22 'read' 'Stg_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.97ns)   --->   "%or_ln26 = or i1 %Stg_read, i1 %D_read" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 23 'or' 'or_ln26' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node or_ln34_1)   --->   "%or_ln34 = or i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 24 'or' 'or_ln34' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln34_1 = or i1 %or_ln34, i1 %or_ln26" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 25 'or' 'or_ln34_1' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%br_ln34 = br i1 %or_ln34_1, void %.critedge, void %_Z5rule5bbbbPi.exit" [Tema1/intersection_semaphores.cpp:34]   --->   Operation 26 'br' 'br_ln34' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%write_ln35 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 5" [Tema1/intersection_semaphores.cpp:35]   --->   Operation 27 'write' 'write_ln35' <Predicate = (!or_ln34_1)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.61ns)   --->   "%br_ln0 = br void %_Z5rule1bbPi.exit"   --->   Operation 28 'br' 'br_ln0' <Predicate = (!or_ln34_1)> <Delay = 1.61>
ST_1 : Operation 29 [1/1] (0.97ns)   --->   "%xor_ln10 = xor i1 %Stg_read, i1 1" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 29 'xor' 'xor_ln10' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.97ns)   --->   "%and_ln10 = and i1 %D_read, i1 %xor_ln10" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 30 'and' 'and_ln10' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.97ns)   --->   "%and_ln10_1 = and i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 31 'and' 'and_ln10_1' <Predicate = (or_ln34_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %and_ln10, void, void" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 32 'br' 'br_ln10' <Predicate = (or_ln34_1)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node or_ln10_1)   --->   "%or_ln10 = or i1 %and_ln10_1, i1 %xor_ln10" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 33 'or' 'or_ln10' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln10_1 = or i1 %or_ln10, i1 %D_read" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 34 'or' 'or_ln10_1' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %or_ln10_1, void %_Z5rule2bbbbPi.exit, void %.critedge29" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 35 'br' 'br_ln10' <Predicate = (or_ln34_1 & !and_ln10)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%br_ln10 = br i1 %and_ln10_1, void %_Z5rule2bbbbPi.exit, void %.critedge29" [Tema1/intersection_semaphores.cpp:10]   --->   Operation 36 'br' 'br_ln10' <Predicate = (or_ln34_1 & and_ln10)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%write_ln11 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 2" [Tema1/intersection_semaphores.cpp:11]   --->   Operation 37 'write' 'write_ln11' <Predicate = (or_ln34_1 & and_ln10 & !and_ln10_1) | (or_ln34_1 & !and_ln10 & !or_ln10_1)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.61ns)   --->   "%br_ln51 = br void %_Z5rule1bbPi.exit" [Tema1/intersection_semaphores.cpp:51]   --->   Operation 38 'br' 'br_ln51' <Predicate = (or_ln34_1 & and_ln10 & !and_ln10_1) | (or_ln34_1 & !and_ln10 & !or_ln10_1)> <Delay = 1.61>
ST_1 : Operation 39 [1/1] (0.97ns)   --->   "%and_ln2 = and i1 %D_read, i1 %Stg_read" [Tema1/intersection_semaphores.cpp:2]   --->   Operation 39 'and' 'and_ln2' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1) | (or_ln34_1 & !and_ln10 & or_ln10_1)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (1.61ns)   --->   "%br_ln2 = br i1 %and_ln2, void %_Z5rule1bbPi.exit, void" [Tema1/intersection_semaphores.cpp:2]   --->   Operation 40 'br' 'br_ln2' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1) | (or_ln34_1 & !and_ln10 & or_ln10_1)> <Delay = 1.61>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%write_ln3 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 1" [Tema1/intersection_semaphores.cpp:3]   --->   Operation 41 'write' 'write_ln3' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1 & and_ln2) | (or_ln34_1 & !and_ln10 & or_ln10_1 & and_ln2)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (1.61ns)   --->   "%br_ln4 = br void %_Z5rule1bbPi.exit" [Tema1/intersection_semaphores.cpp:4]   --->   Operation 42 'br' 'br_ln4' <Predicate = (or_ln34_1 & and_ln10 & and_ln10_1 & and_ln2) | (or_ln34_1 & !and_ln10 & or_ln10_1 & and_ln2)> <Delay = 1.61>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%and_ln18 = and i1 %Stg_read, i1 %D_read" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 43 'and' 'and_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%and_ln18_1 = and i1 %S_read, i1 %J_read" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 44 'and' 'and_ln18_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node or_ln18)   --->   "%xor_ln18 = xor i1 %and_ln18_1, i1 1" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 45 'xor' 'xor_ln18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln18 = or i1 %and_ln18, i1 %xor_ln18" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 46 'or' 'or_ln18' <Predicate = true> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 2.58>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%empty = phi i1 1, void %_Z5rule2bbbbPi.exit, i1 1, void %.critedge, i1 1, void, i1 0, void %.critedge29"   --->   Operation 47 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%write_ln51 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %EW, i1 %empty" [Tema1/intersection_semaphores.cpp:51]   --->   Operation 48 'write' 'write_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln18 = br i1 %or_ln18, void %.critedge30, void %_Z5rule3bbbbPi.exit" [Tema1/intersection_semaphores.cpp:18]   --->   Operation 49 'br' 'br_ln18' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%write_ln19 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 3" [Tema1/intersection_semaphores.cpp:19]   --->   Operation 50 'write' 'write_ln19' <Predicate = (!or_ln18)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.61ns)   --->   "%br_ln0 = br void %_Z5rule4bbbbPi.exit"   --->   Operation 51 'br' 'br_ln0' <Predicate = (!or_ln18)> <Delay = 1.61>
ST_2 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln26)   --->   "%xor_ln26 = xor i1 %or_ln26, i1 1" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 52 'xor' 'xor_ln26' <Predicate = (or_ln18)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node and_ln26)   --->   "%xor_ln26_1 = xor i1 %J_read, i1 %S_read" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 53 'xor' 'xor_ln26_1' <Predicate = (or_ln18)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln26 = and i1 %xor_ln26_1, i1 %xor_ln26" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 54 'and' 'and_ln26' <Predicate = (or_ln18)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (1.61ns)   --->   "%br_ln26 = br i1 %and_ln26, void %_Z5rule4bbbbPi.exit, void" [Tema1/intersection_semaphores.cpp:26]   --->   Operation 55 'br' 'br_ln26' <Predicate = (or_ln18)> <Delay = 1.61>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%write_ln27 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %Regula, i32 4" [Tema1/intersection_semaphores.cpp:27]   --->   Operation 56 'write' 'write_ln27' <Predicate = (or_ln18 & and_ln26)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (1.61ns)   --->   "%br_ln28 = br void %_Z5rule4bbbbPi.exit" [Tema1/intersection_semaphores.cpp:28]   --->   Operation 57 'br' 'br_ln28' <Predicate = (or_ln18 & and_ln26)> <Delay = 1.61>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%empty_5 = phi i1 1, void %.critedge30, i1 1, void, i1 0, void %_Z5rule3bbbbPi.exit"   --->   Operation 58 'phi' 'empty_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%write_ln52 = write void @_ssdm_op_Write.ap_none.i1P0A, i1 %NS, i1 %empty_5" [Tema1/intersection_semaphores.cpp:52]   --->   Operation 59 'write' 'write_ln52' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%ret_ln53 = ret" [Tema1/intersection_semaphores.cpp:53]   --->   Operation 60 'ret' 'ret_ln53' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 2.59ns
The critical path consists of the following:
	wire read operation ('D', Tema1/intersection_semaphores.cpp:41) on port 'D' (Tema1/intersection_semaphores.cpp:41) [26]  (0 ns)
	'and' operation ('and_ln2', Tema1/intersection_semaphores.cpp:2) [50]  (0.978 ns)
	multiplexor before 'phi' operation ('empty') [56]  (1.61 ns)

 <State 2>: 2.59ns
The critical path consists of the following:
	'xor' operation ('xor_ln26', Tema1/intersection_semaphores.cpp:26) [67]  (0 ns)
	'and' operation ('and_ln26', Tema1/intersection_semaphores.cpp:26) [69]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_5') [75]  (1.61 ns)
	'phi' operation ('empty_5') [75]  (0 ns)
	wire write operation ('write_ln52', Tema1/intersection_semaphores.cpp:52) on port 'NS' (Tema1/intersection_semaphores.cpp:52) [76]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
